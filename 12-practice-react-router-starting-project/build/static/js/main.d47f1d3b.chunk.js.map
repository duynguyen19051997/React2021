{"version":3,"sources":["components/layout/MainNavigation.module.css","components/quotes/QuoteForm.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/layout/Layout.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.module.css","components/UI/Card.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/layout/MainNavigation.js","components/layout/Layout.js","components/UI/LoadingSpinner.js","components/quotes/NoQuotesFound.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","hooks/use-http.js","lib/api.js","pages/AllQuotes.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js","pages/NotFound.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js","App.js","index.js"],"names":["module","exports","MainNavigation","props","className","classes","header","logo","nav","activeClassName","active","to","Layout","main","children","LoadingSpinner","spinner","NoQuotesFound","noquotes","QuoteItem","item","text","author","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingASC","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","AllQuotes","loadedData","useEffect","length","Card","card","QuoteForm","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","when","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuote","NotFound","CommentItem","CommentsList","comments","comment","NewCommentForm","commentTextRef","onAddedComment","submitFormHandler","Comments","isAddingComment","setIsAddingComment","params","useParams","loadedComments","addedCommentHandler","HighlightedQuote","QuoteDetail","match","useRouteMatch","path","exact","url","App","fallback","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d47f1d3b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","import { NavLink } from \"react-router-dom\";\n\nimport classes from \"./MainNavigation.module.css\";\n\nexport const MainNavigation = (props) => {\n  return (\n    <header className={classes.header}>\n      <div className={classes.logo}>Great Quotes</div>\n      <nav className={classes.nav}>\n        <ul>\n          <li>\n            <NavLink activeClassName={classes.active} to=\"/quotes\">\n              All Quotes\n            </NavLink>\n          </li>\n          <li>\n            <NavLink activeClassName={classes.active} to=\"/new-quote\">\n              Add a quote\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n","import { Fragment } from \"react\";\n\nimport { MainNavigation } from \"./MainNavigation\";\n\nimport classes from \"./Layout.module.css\";\n\nexport const Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main className={classes.main}>{props.children}</main>\n    </Fragment>\n  );\n};\n","import classes from \"./LoadingSpinner.module.css\";\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n};\n\nexport default LoadingSpinner;\n","import { Link } from \"react-router-dom\";\n\nimport classes from \"./NoQuotesFound.module.css\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className=\"btn\" to=\"/new-quote\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { Link } from \"react-router-dom\";\n\nimport classes from \"./QuoteItem.module.css\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className=\"btn\" to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingASC = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingASC);\n\n  const changeSortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isSortingASC ? \"desc\" : \"asc\"}`,\n    });\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingASC ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { useReducer, useCallback } from \"react\";\n\nconst httpReducer = (state, action) => {\n  if (action.type === \"SEND\") {\n    return {\n      data: null,\n      error: null,\n      status: \"pending\",\n    };\n  }\n\n  if (action.type === \"SUCCESS\") {\n    return {\n      data: action.responseData,\n      error: null,\n      status: \"completed\",\n    };\n  }\n\n  if (action.type === \"ERROR\") {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: \"completed\",\n    };\n  }\n\n  return state;\n};\n\nconst useHttp = (requestFunction, startWithPending = false) => {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? \"pending\" : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: \"SEND\" });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: \"SUCCESS\", responseData });\n      } catch (error) {\n        dispatch({\n          type: \"ERROR\",\n          errorMessage: error.message || \"Something went wrong!\",\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n};\n\nexport default useHttp;\n","const FIREBASE_DOMAIN =\n  \"https://react-pratice-project-default-rtdb.firebaseio.com\";\n\nexport const getAllQuotes = async () => {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quotes.\");\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n};\n\nexport const getSingleQuote = async (quoteId) => {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quote.\");\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n};\n\nexport const addQuote = async (quoteData) => {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: \"POST\",\n    body: JSON.stringify(quoteData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not create quote.\");\n  }\n\n  return null;\n};\n\nexport const addComment = async (requestData) => {\n  const response = await fetch(\n    `${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\n    {\n      method: \"POST\",\n      body: JSON.stringify(requestData.commentData),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not add comment.\");\n  }\n\n  return { commentId: data.name };\n};\n\nexport const getAllComments = async (quoteId) => {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not get comments.\");\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      text: data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n};\n","import { Fragment, useEffect } from \"react\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\n\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\n\n// const DUMMY_QUOTES = [\n//   { id: \"q1\", author: \"Duy\", text: \"Learn React is great\" },\n//   { id: \"q2\", author: \"Duy\", text: \"Hello world\" },\n//   { id: \"q3\", author: \"Duy\", text: \"Change to be stronger\" },\n//   { id: \"q4\", author: \"Duy\", text: \"Nothing make you sad\" },\n//   { id: \"q5\", author: \"Duy\", text: \"Believe in you\" },\n// ];\n\nexport const AllQuotes = (props) => {\n  const {\n    sendRequest,\n    status,\n    data: loadedData,\n    error,\n  } = useHttp(getAllQuotes, true);\n\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"centered focus\">\n        <p>{error}</p>\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && (!loadedData || loadedData.length === 0)) {\n    return <NoQuotesFound />;\n  }\n\n  return (\n    <Fragment>\n      <QuoteList quotes={loadedData} />\n    </Fragment>\n  );\n};\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState, Fragment } from \"react\";\nimport { Prompt } from \"react-router-dom\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  };\n\n  const focusedFormHandler = () => {\n    setIsEntering(true);\n  };\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isEntering}\n        message={(location) =>\n          \"Are you sure you want to leave this page? All your data will be lost!\"\n        }\n      />\n      <Card>\n        <form\n          onFocus={focusedFormHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport QuoteForm from \"../components/quotes/QuoteForm\";\nimport useHttp from \"../hooks/use-http\";\nimport { addQuote } from \"../lib/api\";\n\nexport const NewQuote = (props) => {\n  const { sendRequest, status } = useHttp(addQuote);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (status === \"completed\") {\n      history.push(\"/quotes\");\n    }\n  }, [status, history]);\n\n  const addQuoteHandler = (quote) => {\n    sendRequest(quote);\n  };\n\n  return (\n    <QuoteForm isLoading={status === \"pending\"} onAddQuote={addQuoteHandler} />\n  );\n};\n","export const NotFound = (props) => {\n  return (\n    <div className=\"centered\">\n      <p>Page Not Found!</p>\n    </div>\n  );\n};\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useRef, useEffect } from \"react\";\n\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const { sendRequest, status, error } = useHttp(addComment);\n  const commentTextRef = useRef();\n\n  const { onAddedComment, quoteId } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n      commentTextRef.current.value = \"\";\n    }\n  }, [status, onAddedComment, error]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n    sendRequest({\n      quoteId: quoteId,\n      commentData: commentTextRef.current.value,\n    });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./Comments.module.css\";\nimport CommentsList from \"./CommentsList\";\nimport NewCommentForm from \"./NewCommentForm\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    sendRequest,\n    status,\n    data: loadedComments,\n  } = useHttp(getAllComments, true);\n\n  useEffect(() => {\n    sendRequest(params.quoteId);\n  }, [sendRequest, params.quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(params.quoteId);\n    setIsAddingComment(false);\n  }, [sendRequest, params.quoteId]);\n\n  let comments;\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = (\n      <div className=\"centered\">\n        <p>No comment were added yet!</p>\n      </div>\n    );\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={params.quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment, useEffect } from \"react\";\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\n\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\n\n// const DUMMY_QUOTES = [\n//   { id: \"q1\", author: \"Duy\", text: \"Learn React is great\" },\n//   { id: \"q2\", author: \"Duy\", text: \"Hello world\" },\n//   { id: \"q3\", author: \"Duy\", text: \"Change to be stronger\" },\n//   { id: \"q4\", author: \"Duy\", text: \"Nothing make you sad\" },\n//   { id: \"q5\", author: \"Duy\", text: \"Believe in you\" },\n// ];\n\nexport const QuoteDetail = (props) => {\n  const match = useRouteMatch();\n  const params = useParams();\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error,\n  } = useHttp(getSingleQuote, true);\n\n  useEffect(() => {\n    sendRequest(params.quoteId);\n  }, [sendRequest, params.quoteId]);\n\n  // const loadedQuote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"centered focus\">\n        <p>{error}</p>\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && !loadedQuote) {\n    return <NoQuotesFound />;\n  }\n\n  return (\n    <Fragment>\n      <HighlightedQuote author={loadedQuote.author} text={loadedQuote.text} />\n      <Route path={match.path} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </Fragment>\n  );\n};\n","import React, { Suspense } from \"react\";\nimport { Route, Switch, Redirect, Router } from \"react-router-dom\";\n\nimport { Layout } from \"./components/layout/Layout\";\nimport LoadingSpinner from \"./components/UI/LoadingSpinner\";\nimport { AllQuotes } from \"./pages/AllQuotes\";\nimport { NewQuote } from \"./pages/NewQuote\";\nimport { NotFound } from \"./pages/NotFound\";\nimport { QuoteDetail } from \"./pages/QuoteDetail\";\n\n// const NewQuote = React.lazy(() => {\n//   import(\"./pages/NewQuote\");\n// });\n\nfunction App() {\n  return (\n    <Layout>\n      <Suspense\n        fallback={\n          <div className=\"centered\">\n            <LoadingSpinner />\n          </div>\n        }\n      >\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/quotes\" />\n          </Route>\n          <Route path=\"/quotes\" exact>\n            <AllQuotes />\n          </Route>\n          <Route path=\"/quotes/:quoteId\">\n            <QuoteDetail />\n          </Route>\n          <Route path=\"/new-quote\">\n            <NewQuote />\n          </Route>\n          <Router path=\"*\">\n            <NotFound />\n          </Router>\n        </Switch>\n      </Suspense>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}